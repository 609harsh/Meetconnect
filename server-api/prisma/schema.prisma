// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String   @unique
  password    String?   
  phoneNumber String?   @unique 
  createdAt   DateTime @default(now())
  about       String?
  interview   Interview[]
}

model UserAddress{
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    String   @unique
  line1       String? 
  line2       String?
  state       String?
  country     String?
  city        String?
  pincode     String?
}
model Resources {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  label     String
  easy      EasyQuestion[] 
  medium    MediumQuestion[] 
  hard      HardQuestion[] 
}

model EasyQuestion{
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  question        String
  solution        String
  resource        Resources? @relation(fields: [resoucesId], references: [id])
  resoucesId      String?  @db.ObjectId
}

model MediumQuestion{
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  question      String
  solution      String
  resource      Resources? @relation(fields: [resoucesId], references: [id])
  resoucesId    String?  @db.ObjectId
}
model HardQuestion{
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  question      String
  solution      String
  resource      Resources? @relation(fields: [resoucesId], references: [id])
  resoucesId    String?  @db.ObjectId
}

model Interview{
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  userId        String @db.ObjectId
  user          User   @relation(fields: [userId], references: [id])
  title         String
  type          String
  company       String
  date          String
  duration      String
  guest         String?
  notification  String?
  createdAt     DateTime @default(now())
  link          String?
}